"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/map/page",{

/***/ "(app-pages-browser)/./src/components/MapComponenets/mapview.js":
/*!**************************************************!*\
  !*** ./src/components/MapComponenets/mapview.js ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MapView)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n\nvar _s = $RefreshSig$();\n\n\n// Use a fallback token if the environment variable is not available\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoiaGFubHl1MjAwNSIsImEiOiJjbTJxano5dWkxNXo0MmtxODM5MmxwN3lwIn0.2bgd33u52q49s2QcdaMVIg\" || 0;\nfunction MapView(param) {\n    let { centers, returns, loading, activeCenter, onCenterChange, getReturnType } = param;\n    _s();\n    const mapContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const map = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [mapReady, setMapReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [mapError, setMapError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add a ref to track if sources have been added\n    const sourcesAdded = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const markersRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    // Initialize map when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MapView.useEffect\": ()=>{\n            // Import mapboxgl dynamically to avoid SSR issues\n            const initializeMap = {\n                \"MapView.useEffect.initializeMap\": async ()=>{\n                    try {\n                        // Don't re-initialize if map exists\n                        if (map.current) return;\n                        // Dynamic import to avoid server-side rendering issues\n                        const mapboxgl = (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_mapbox-gl_dist_mapbox-gl_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! mapbox-gl */ \"(app-pages-browser)/./node_modules/mapbox-gl/dist/mapbox-gl.js\", 23))).default;\n                        await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_mapbox-gl_dist_mapbox-gl_css\").then(__webpack_require__.bind(__webpack_require__, /*! mapbox-gl/dist/mapbox-gl.css */ \"(app-pages-browser)/./node_modules/mapbox-gl/dist/mapbox-gl.css\"));\n                        // Set the access token\n                        mapboxgl.accessToken = MAPBOX_ACCESS_TOKEN;\n                        // Check if WebGL is supported\n                        if (!mapboxgl.supported()) {\n                            setMapError('Your browser does not support WebGL, which is required for the map.');\n                            return;\n                        }\n                        // Create map instance\n                        console.log(\"Initializing map...\");\n                        map.current = new mapboxgl.Map({\n                            container: mapContainer.current,\n                            style: 'mapbox://styles/mapbox/day-11',\n                            center: [\n                                -95,\n                                40\n                            ],\n                            zoom: 3.5,\n                            preserveDrawingBuffer: true\n                        });\n                        // Add navigation controls\n                        map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n                        // Setup map layers when loaded\n                        map.current.on('load', {\n                            \"MapView.useEffect.initializeMap\": ()=>{\n                                console.log(\"Map loaded successfully\");\n                                // Check if source already exists to prevent duplicate source error\n                                if (!map.current.getSource('routes') && !sourcesAdded.current) {\n                                    // Add source for routes\n                                    map.current.addSource('routes', {\n                                        type: 'geojson',\n                                        data: {\n                                            type: 'FeatureCollection',\n                                            features: []\n                                        }\n                                    });\n                                    // Add line layer for routes\n                                    map.current.addLayer({\n                                        id: 'routes',\n                                        type: 'line',\n                                        source: 'routes',\n                                        layout: {\n                                            'line-join': 'round',\n                                            'line-cap': 'round'\n                                        },\n                                        paint: {\n                                            'line-color': [\n                                                'match',\n                                                [\n                                                    'get',\n                                                    'category'\n                                                ],\n                                                'Resale',\n                                                '#10b981',\n                                                'Refurbishment',\n                                                '#3b82f6',\n                                                'Recycle',\n                                                '#f59e0b',\n                                                'Damaged/Write-off',\n                                                '#ef4444',\n                                                '#9ca3af' // gray default\n                                            ],\n                                            'line-width': [\n                                                'match',\n                                                [\n                                                    'get',\n                                                    'method'\n                                                ],\n                                                'air',\n                                                4,\n                                                'express',\n                                                3,\n                                                2 // ground shipping\n                                            ],\n                                            'line-opacity': 0.7,\n                                            'line-dasharray': [\n                                                'match',\n                                                [\n                                                    'get',\n                                                    'status'\n                                                ],\n                                                'In Process',\n                                                [\n                                                    2,\n                                                    1\n                                                ],\n                                                'Under Review',\n                                                [\n                                                    1,\n                                                    1\n                                                ],\n                                                [\n                                                    1,\n                                                    0\n                                                ] // solid line for processed\n                                            ]\n                                        }\n                                    });\n                                    // Mark sources as added\n                                    sourcesAdded.current = true;\n                                }\n                                setMapReady(true);\n                            }\n                        }[\"MapView.useEffect.initializeMap\"]);\n                        // Error handling\n                        map.current.on('error', {\n                            \"MapView.useEffect.initializeMap\": (e)=>{\n                                console.error('Mapbox error:', e);\n                                setMapError('An error occurred while loading the map.');\n                            }\n                        }[\"MapView.useEffect.initializeMap\"]);\n                    } catch (error) {\n                        console.error('Map initialization error:', error);\n                        setMapError('Failed to initialize the map. Please check your Mapbox token.');\n                    }\n                }\n            }[\"MapView.useEffect.initializeMap\"];\n            initializeMap();\n            // Use a cleanup function to prevent memory leaks\n            return ({\n                \"MapView.useEffect\": ()=>{\n                    // Clean up any markers that have been created\n                    if (markersRef.current && markersRef.current.length > 0) {\n                        markersRef.current.forEach({\n                            \"MapView.useEffect\": (marker)=>{\n                                if (marker) marker.remove();\n                            }\n                        }[\"MapView.useEffect\"]);\n                        markersRef.current = [];\n                    }\n                // Don't remove the map on cleanup - let it persist\n                }\n            })[\"MapView.useEffect\"];\n        }\n    }[\"MapView.useEffect\"], []); // Empty dependency array means this only runs once\n    // Add center markers and return markers when map is ready\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MapView.useEffect\": ()=>{\n            if (!map.current || !mapReady || !centers || centers.length === 0) return;\n            const addMarkers = {\n                \"MapView.useEffect.addMarkers\": async ()=>{\n                    try {\n                        // Dynamic import to access mapboxgl\n                        const mapboxgl = (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_mapbox-gl_dist_mapbox-gl_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! mapbox-gl */ \"(app-pages-browser)/./node_modules/mapbox-gl/dist/mapbox-gl.js\", 23))).default;\n                        // Clear any existing markers\n                        markersRef.current.forEach({\n                            \"MapView.useEffect.addMarkers\": (marker)=>{\n                                if (marker) marker.remove();\n                            }\n                        }[\"MapView.useEffect.addMarkers\"]);\n                        markersRef.current = [];\n                        // Add center markers\n                        centers.forEach({\n                            \"MapView.useEffect.addMarkers\": (center)=>{\n                                const { lat, lng } = center.location.coordinates;\n                                // Create marker element\n                                const el = document.createElement('div');\n                                el.className = 'w-8 h-8 bg-indigo-600 rounded-full flex items-center justify-center shadow-lg';\n                                el.innerHTML = '<div class=\"w-4 h-4 bg-white rounded-full\"></div>';\n                                // Add marker\n                                const marker = new mapboxgl.Marker(el).setLngLat([\n                                    lng,\n                                    lat\n                                ]).setPopup(new mapboxgl.Popup({\n                                    offset: 25\n                                }).setHTML('\\n                <div class=\"p-3\">\\n                  <h3 class=\"font-bold text-sm\">'.concat(center.name, '</h3>\\n                  <p class=\"text-xs text-gray-700\">').concat(center.location.city, \", \").concat(center.location.state, '</p>\\n                  <div class=\"mt-2 pt-2 border-t border-gray-200 text-xs\">\\n                    <p><span class=\"font-medium\">Processing:</span> ').concat(center.metrics.averageProcessingTime, ' days</p>\\n                    <p><span class=\"font-medium\">Daily Volume:</span> ').concat(center.metrics.dailyReturnVolume, \" items</p>\\n                  </div>\\n                </div>\\n              \"))).addTo(map.current);\n                                markersRef.current.push(marker);\n                            }\n                        }[\"MapView.useEffect.addMarkers\"]);\n                        // Add return origin markers\n                        returns.forEach({\n                            \"MapView.useEffect.addMarkers\": (item)=>{\n                                var _item_origin, _item_items_;\n                                // Check if the return has origin coordinates\n                                if (!((_item_origin = item.origin) === null || _item_origin === void 0 ? void 0 : _item_origin.coordinates)) return;\n                                const { lat, lng } = item.origin.coordinates;\n                                const returnType = getReturnType(item);\n                                // Create marker element\n                                const el = document.createElement('div');\n                                el.className = \"w-4 h-4 rounded-full shadow-sm \".concat(getReturnMarkerColor(returnType));\n                                // Add marker\n                                const marker = new mapboxgl.Marker(el).setLngLat([\n                                    lng,\n                                    lat\n                                ]).setPopup(new mapboxgl.Popup({\n                                    offset: 15\n                                }).setHTML('\\n                <div class=\"p-2 text-xs\">\\n                  <p class=\"font-bold\">'.concat(item.customerName, '</p>\\n                  <p class=\"text-gray-700\">').concat(item.origin.city, \", \").concat(item.origin.state, '</p>\\n                  <p class=\"mt-1\">').concat(((_item_items_ = item.items[0]) === null || _item_items_ === void 0 ? void 0 : _item_items_.name) || 'Unknown item', '</p>\\n                  <div class=\"mt-1 pt-1 border-t border-gray-200\">\\n                    <p class=\"text-gray-700\">Status: <span class=\"font-medium\">').concat(item.status, '</span></p>\\n                    <p class=\"text-gray-700\">Type: <span class=\"font-medium\">').concat(returnType, \"</span></p>\\n                  </div>\\n                </div>\\n              \"))).addTo(map.current);\n                                markersRef.current.push(marker);\n                            }\n                        }[\"MapView.useEffect.addMarkers\"]);\n                        // Update routes\n                        updateRoutes();\n                    } catch (error) {\n                        console.error('Error adding markers:', error);\n                        setMapError('Failed to add markers to the map.');\n                    }\n                }\n            }[\"MapView.useEffect.addMarkers\"];\n            addMarkers();\n        }\n    }[\"MapView.useEffect\"], [\n        centers,\n        returns,\n        mapReady,\n        getReturnType\n    ]);\n    // Update routes when activeCenter changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MapView.useEffect\": ()=>{\n            if (!map.current || !mapReady) return;\n            const updateActiveCenter = {\n                \"MapView.useEffect.updateActiveCenter\": async ()=>{\n                    try {\n                        if (activeCenter) {\n                            // Focus map on the selected center\n                            map.current.flyTo({\n                                center: [\n                                    activeCenter.location.coordinates.lng,\n                                    activeCenter.location.coordinates.lat\n                                ],\n                                zoom: 5,\n                                duration: 1500\n                            });\n                            // Highlight routes for this center\n                            highlightCenterRoutes(activeCenter.id);\n                        } else {\n                            // Reset view\n                            map.current.flyTo({\n                                center: [\n                                    -95,\n                                    40\n                                ],\n                                zoom: 3.5,\n                                duration: 1500\n                            });\n                            // Reset route styling if the layer exists\n                            if (map.current.getLayer('routes')) {\n                                map.current.setPaintProperty('routes', 'line-opacity', 0.7);\n                                map.current.setPaintProperty('routes', 'line-width', [\n                                    'match',\n                                    [\n                                        'get',\n                                        'method'\n                                    ],\n                                    'air',\n                                    4,\n                                    'express',\n                                    3,\n                                    2 // ground shipping\n                                ]);\n                            }\n                        }\n                    } catch (error) {\n                        console.error('Error updating active center:', error);\n                    }\n                }\n            }[\"MapView.useEffect.updateActiveCenter\"];\n            updateActiveCenter();\n        }\n    }[\"MapView.useEffect\"], [\n        activeCenter,\n        mapReady\n    ]);\n    // Update route lines on the map\n    const updateRoutes = ()=>{\n        if (!map.current) return;\n        try {\n            // Wait for map to be ready\n            if (!map.current.loaded()) {\n                console.log(\"Map not loaded yet, delaying route update\");\n                setTimeout(updateRoutes, 100);\n                return;\n            }\n            // Check if the source exists before trying to update it\n            if (!map.current.getSource('routes')) {\n                console.warn('Routes source not found, cannot update routes');\n                return;\n            }\n            const routeFeatures = returns.filter((item)=>{\n                var _item_origin;\n                return ((_item_origin = item.origin) === null || _item_origin === void 0 ? void 0 : _item_origin.coordinates) && item.processingLocation;\n            }).map((item)=>{\n                var _item_shipping;\n                const destCenter = centers.find((center)=>center.id === item.processingLocation);\n                if (!destCenter) return null;\n                return {\n                    type: 'Feature',\n                    properties: {\n                        id: item.id,\n                        category: getReturnType ? getReturnType(item) : 'Unknown',\n                        status: item.status,\n                        center: item.processingLocation,\n                        method: ((_item_shipping = item.shipping) === null || _item_shipping === void 0 ? void 0 : _item_shipping.method) || 'ground'\n                    },\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: [\n                            [\n                                item.origin.coordinates.lng,\n                                item.origin.coordinates.lat\n                            ],\n                            [\n                                destCenter.location.coordinates.lng,\n                                destCenter.location.coordinates.lat\n                            ]\n                        ]\n                    }\n                };\n            }).filter(Boolean);\n            // Update the route source data\n            map.current.getSource('routes').setData({\n                type: 'FeatureCollection',\n                features: routeFeatures\n            });\n        } catch (error) {\n            console.error('Error updating routes:', error);\n        }\n    };\n    // Highlight routes for a specific center\n    const highlightCenterRoutes = (centerId)=>{\n        if (!map.current) return;\n        try {\n            // Check if the layer exists before updating it\n            if (!map.current.getLayer('routes')) {\n                console.warn('Routes layer not found, cannot highlight routes');\n                return;\n            }\n            map.current.setPaintProperty('routes', 'line-opacity', [\n                'match',\n                [\n                    'get',\n                    'center'\n                ],\n                centerId,\n                0.9,\n                0.2 // Other routes\n            ]);\n            map.current.setPaintProperty('routes', 'line-width', [\n                'case',\n                [\n                    '==',\n                    [\n                        'get',\n                        'center'\n                    ],\n                    centerId\n                ],\n                [\n                    'match',\n                    [\n                        'get',\n                        'method'\n                    ],\n                    'air',\n                    6,\n                    'express',\n                    5,\n                    4 // ground shipping\n                ],\n                [\n                    'match',\n                    [\n                        'get',\n                        'method'\n                    ],\n                    'air',\n                    2,\n                    'express',\n                    1.5,\n                    1 // ground shipping\n                ]\n            ]);\n        } catch (error) {\n            console.error('Error highlighting routes:', error);\n        }\n    };\n    const resetView = ()=>{\n        onCenterChange(null);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative h-full w-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: mapContainer,\n                className: \"absolute inset-0 bg-gray-100\",\n                style: {\n                    width: '100%',\n                    height: '100%'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                lineNumber: 368,\n                columnNumber: 7\n            }, this),\n            loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-white bg-opacity-70 flex items-center justify-center z-20\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n                }, void 0, false, {\n                    fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                    lineNumber: 376,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                lineNumber: 375,\n                columnNumber: 9\n            }, this),\n            !mapReady && !loading && !mapError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-white bg-opacity-70 flex items-center justify-center z-20\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-gray-700 font-medium\",\n                    children: \"Initializing map...\"\n                }, void 0, false, {\n                    fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                    lineNumber: 382,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                lineNumber: 381,\n                columnNumber: 9\n            }, this),\n            mapError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-white bg-opacity-90 flex items-center justify-center z-20\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-red-50 text-red-700 p-4 rounded-md max-w-md text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"font-bold mb-2\",\n                            children: \"Map Error\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                            lineNumber: 389,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: mapError\n                        }, void 0, false, {\n                            fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                            lineNumber: 390,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm mt-2\",\n                            children: \"Please check your Mapbox access token and ensure your browser supports WebGL.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                            lineNumber: 391,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                    lineNumber: 388,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                lineNumber: 387,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 right-16 z-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: resetView,\n                    className: \"px-3 py-1.5 bg-white shadow-md text-indigo-700 rounded-md text-sm font-medium flex items-center hover:bg-indigo-50 transition-colors\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            className: \"h-4 w-4 mr-1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                            lineNumber: 403,\n                            columnNumber: 11\n                        }, this),\n                        \"Reset View\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                    lineNumber: 399,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n                lineNumber: 398,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/lxyhan/Google x Hack The Future/my-nextjs-app/src/components/MapComponenets/mapview.js\",\n        lineNumber: 367,\n        columnNumber: 5\n    }, this);\n}\n_s(MapView, \"Aoxyxq+Z5nE2ZeYYrTXzUvMjg0o=\");\n_c = MapView;\n// Helper Functions\nfunction getReturnMarkerColor(category) {\n    switch(category){\n        case 'Resale':\n            return 'bg-emerald-500';\n        case 'Refurbishment':\n            return 'bg-blue-500';\n        case 'Recycle':\n            return 'bg-amber-500';\n        case 'Damaged/Write-off':\n            return 'bg-red-500';\n        default:\n            return 'bg-gray-500';\n    }\n}\nvar _c;\n$RefreshReg$(_c, \"MapView\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/MapComponenets/mapview.js\n"));

/***/ })

});